paths:
  /api/cart/allCart:
    get:
      summary: Obtiene todos los Carritos disponibles en la aplicacion
      tags:
        - Cart
      responses:  
        "200":
          description: La operacion fue exitosa!! Se retorna un arreglo con los Carritos.
        "400":
          description: Se envio un dato no esperado.
        "500":
          description: Error inesperado en el server, no se puede manejar el proceso.


  /api/cart/carts/{uid}:
    get:
      summary: Obtiene un Carrito por id disponibles en la aplicacion
      tags:
        - Cart
      parameters:
        - name: uid
          in: path
          required: true
          description: id del Carrito que se desea buscar
          schema:
            $type: String
      responses:
        "200":
          description: La operacion fue exitosa!! Se retorna un arreglo con los Carritos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        "400":
          description: Se envio un dato no esperado.
        "500":
          description: Error inesperado en el server, no se puede manejar el proceso.


components:
  schemas:
    Cart: 
      type: object
      properties:
        _id: 
          type: ObjectId
          description: Id autogenerado de MongoDB.
        date: 
          type: String
          description: Fecha en que se creo el Carrito
        producto:
          type: String
          description: Productos que intregran el Carrito
        amount:
          type: Number
          description: Cantidad de stock que hay en el Carrito
      example: 